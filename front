<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SwiftDEX - Decentralized Exchange</title>
    <style>
        /* Design System Tokens */
        :root {
            /* Light Theme */
            --brand: #5B4FFF;
            --brand-hover: #4A3FEE;
            --brand-light: #F0EEFF;
            --bg: #FFFFFF;
            --bg-elev: #F8F9FA;
            --bg-elev-2: #F1F3F5;
            --text: #0A0B0D;
            --text-secondary: #6B7280;
            --muted: #9CA3AF;
            --border: #E5E7EB;
            --success: #10B981;
            --warning: #F59E0B;
            --error: #EF4444;
            --info: #3B82F6;
            
            /* Spacing System (8px base) */
            --s1: 8px;
            --s2: 16px;
            --s3: 24px;
            --s4: 32px;
            --s5: 40px;
            --s6: 48px;
            --s7: 56px;
            --s8: 64px;
            
            /* Typography Scale */
            --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            --font-mono: 'SF Mono', Monaco, monospace;
            
            /* Radius */
            --radius-sm: 6px;
            --radius-md: 12px;
            --radius-lg: 16px;
            --radius-xl: 24px;
            
            /* Shadows */
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
        }
        
        /* Dark Theme */
        [data-theme="dark"] {
            --brand: #6B5FFF;
            --brand-hover: #7A6FFF;
            --brand-light: #1A1830;
            --bg: #0A0B0D;
            --bg-elev: #141519;
            --bg-elev-2: #1E1F25;
            --text: #FFFFFF;
            --text-secondary: #9CA3AF;
            --muted: #6B7280;
            --border: #2D2E35;
            --success: #059669;
            --warning: #D97706;
            --error: #DC2626;
            --info: #2563EB;
        }
        
        /* Reset & Base */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: var(--font-sans);
            background: var(--bg);
            color: var(--text);
            line-height: 1.6;
            transition: background 0.3s, color 0.3s;
        }
        
        /* Typography */
        h1 { font-size: 2.5rem; font-weight: 700; line-height: 1.2; }
        h2 { font-size: 2rem; font-weight: 600; line-height: 1.3; }
        h3 { font-size: 1.5rem; font-weight: 600; line-height: 1.4; }
        h4 { font-size: 1.25rem; font-weight: 500; line-height: 1.4; }
        h5 { font-size: 1.125rem; font-weight: 500; line-height: 1.5; }
        h6 { font-size: 1rem; font-weight: 500; line-height: 1.5; }
        
        .text-sm { font-size: 0.875rem; }
        .text-xs { font-size: 0.75rem; }
        .text-mono { font-family: var(--font-mono); }
        .text-muted { color: var(--text-secondary); }
        .text-center { text-align: center; }
        
        /* Layout */
        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 0 var(--s3);
        }
        
        .grid {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            gap: var(--s3);
        }
        
        /* Components */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: var(--s2) var(--s3);
            border-radius: var(--radius-md);
            font-weight: 500;
            font-size: 1rem;
            border: none;
            cursor: pointer;
            transition: all 0.2s;
            gap: var(--s1);
            white-space: nowrap;
        }
        
        .btn:focus-visible {
            outline: 2px solid var(--brand);
            outline-offset: 2px;
        }
        
        .btn-primary {
            background: var(--brand);
            color: white;
        }
        
        .btn-primary:hover:not(:disabled) {
            background: var(--brand-hover);
            transform: translateY(-1px);
        }
        
        .btn-secondary {
            background: var(--bg-elev);
            color: var(--text);
            border: 1px solid var(--border);
        }
        
        .btn-secondary:hover:not(:disabled) {
            background: var(--bg-elev-2);
        }
        
        .btn-ghost {
            background: transparent;
            color: var(--text);
        }
        
        .btn-ghost:hover:not(:disabled) {
            background: var(--bg-elev);
        }
        
        .btn-sm {
            padding: var(--s1) var(--s2);
            font-size: 0.875rem;
        }
        
        .btn-lg {
            padding: var(--s2) var(--s4);
            font-size: 1.125rem;
        }
        
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .btn-full {
            width: 100%;
        }
        
        /* Input */
        .input-group {
            display: flex;
            flex-direction: column;
            gap: var(--s1);
        }
        
        .input-label {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--text-secondary);
        }
        
        .input {
            padding: var(--s2);
            border: 1px solid var(--border);
            border-radius: var(--radius-md);
            background: var(--bg);
            color: var(--text);
            font-size: 1rem;
            transition: all 0.2s;
        }
        
        .input:focus {
            outline: none;
            border-color: var(--brand);
            box-shadow: 0 0 0 3px var(--brand-light);
        }
        
        .input-lg {
            padding: var(--s2) var(--s3);
            font-size: 1.25rem;
        }
        
        .input-error {
            border-color: var(--error);
        }
        
        /* Card */
        .card {
            background: var(--bg-elev);
            border-radius: var(--radius-lg);
            padding: var(--s3);
            border: 1px solid var(--border);
        }
        
        .card-elevated {
            box-shadow: var(--shadow-lg);
        }
        
        /* Badge */
        .badge {
            display: inline-flex;
            align-items: center;
            padding: 4px 8px;
            border-radius: var(--radius-sm);
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .badge-success {
            background: #10B98120;
            color: var(--success);
        }
        
        .badge-warning {
            background: #F59E0B20;
            color: var(--warning);
        }
        
        .badge-error {
            background: #EF444420;
            color: var(--error);
        }
        
        .badge-info {
            background: #3B82F620;
            color: var(--info);
        }
        
        /* Modal */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s;
        }
        
        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }
        
        .modal {
            background: var(--bg);
            border-radius: var(--radius-xl);
            width: 90%;
            max-width: 500px;
            max-height: 80vh;
            overflow-y: auto;
            transform: scale(0.9);
            transition: transform 0.3s;
        }
        
        .modal-overlay.active .modal {
            transform: scale(1);
        }
        
        .modal-header {
            padding: var(--s3);
            border-bottom: 1px solid var(--border);
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .modal-body {
            padding: var(--s3);
        }
        
        /* Toast */
        .toast-container {
            position: fixed;
            top: var(--s3);
            right: var(--s3);
            z-index: 2000;
            display: flex;
            flex-direction: column;
            gap: var(--s2);
        }
        
        .toast {
            background: var(--bg-elev);
            border: 1px solid var(--border);
            border-radius: var(--radius-md);
            padding: var(--s2) var(--s3);
            display: flex;
            align-items: center;
            gap: var(--s2);
            min-width: 300px;
            box-shadow: var(--shadow-lg);
            animation: slideIn 0.3s ease;
        }
        
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        /* Navigation */
        .nav {
            background: var(--bg);
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .nav-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: var(--s2) 0;
        }
        
        .nav-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--brand);
            text-decoration: none;
        }
        
        .nav-menu {
            display: flex;
            gap: var(--s1);
        }
        
        .nav-link {
            padding: var(--s1) var(--s2);
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: var(--radius-md);
            transition: all 0.2s;
        }
        
        .nav-link:hover {
            color: var(--text);
            background: var(--bg-elev);
        }
        
        .nav-link.active {
            color: var(--brand);
            background: var(--brand-light);
        }
        
        .nav-actions {
            display: flex;
            align-items: center;
            gap: var(--s2);
        }
        
        /* Token Selector */
        .token-select {
            display: flex;
            align-items: center;
            gap: var(--s1);
            padding: var(--s1) var(--s2);
            background: var(--bg-elev);
            border: 1px solid var(--border);
            border-radius: var(--radius-md);
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .token-select:hover {
            border-color: var(--brand);
        }
        
        .token-icon {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--brand), var(--info));
        }
        
        /* Swap Interface */
        .swap-container {
            max-width: 480px;
            margin: var(--s6) auto;
        }
        
        .swap-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: var(--s3);
        }
        
        .swap-input-group {
            position: relative;
            margin-bottom: var(--s2);
        }
        
        .swap-input-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: var(--s1);
        }
        
        .swap-input-container {
            display: flex;
            align-items: center;
            gap: var(--s2);
            padding: var(--s3);
            background: var(--bg-elev);
            border: 1px solid var(--border);
            border-radius: var(--radius-lg);
        }
        
        .swap-input-field {
            flex: 1;
            background: transparent;
            border: none;
            font-size: 1.5rem;
            font-weight: 500;
            color: var(--text);
        }
        
        .swap-input-field:focus {
            outline: none;
        }
        
        .swap-arrow {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background: var(--bg);
            border: 4px solid var(--bg-elev);
            border-radius: var(--radius-md);
            margin: -20px auto;
            position: relative;
            z-index: 1;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .swap-arrow:hover {
            transform: rotate(180deg);
        }
        
        /* Price Info */
        .price-info {
            padding: var(--s2);
            background: var(--bg-elev);
            border-radius: var(--radius-md);
            margin-bottom: var(--s3);
        }
        
        .price-info-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: var(--s1) 0;
        }
        
        .price-info-label {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }
        
        .price-info-value {
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: var(--s1);
        }
        
        /* Pool Interface */
        .pool-tabs {
            display: flex;
            gap: var(--s1);
            margin-bottom: var(--s3);
            background: var(--bg-elev);
            padding: 4px;
            border-radius: var(--radius-md);
        }
        
        .pool-tab {
            flex: 1;
            padding: var(--s2);
            background: transparent;
            border: none;
            border-radius: var(--radius-sm);
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .pool-tab.active {
            background: var(--bg);
            color: var(--text);
            box-shadow: var(--shadow-sm);
        }
        
        /* Table */
        .table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .table th {
            text-align: left;
            padding: var(--s2);
            font-weight: 500;
            color: var(--text-secondary);
            font-size: 0.875rem;
            border-bottom: 1px solid var(--border);
        }
        
        .table td {
            padding: var(--s2);
            border-bottom: 1px solid var(--border);
        }
        
        .table tr:hover td {
            background: var(--bg-elev);
        }
        
        /* Loading States */
        .skeleton {
            background: linear-gradient(90deg, var(--bg-elev) 25%, var(--bg-elev-2) 50%, var(--bg-elev) 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
            border-radius: var(--radius-sm);
        }
        
        @keyframes loading {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }
        
        .spinner {
            border: 2px solid var(--border);
            border-top-color: var(--brand);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        /* Settings Panel */
        .settings-panel {
            background: var(--bg-elev);
            border-radius: var(--radius-lg);
            padding: var(--s3);
        }
        
        .settings-group {
            margin-bottom: var(--s3);
        }
        
        .settings-label {
            font-weight: 500;
            margin-bottom: var(--s2);
            display: flex;
            align-items: center;
            gap: var(--s1);
        }
        
        .slippage-options {
            display: flex;
            gap: var(--s1);
            margin-bottom: var(--s2);
        }
        
        .slippage-btn {
            flex: 1;
            padding: var(--s1) var(--s2);
            background: var(--bg);
            border: 1px solid var(--border);
            border-radius: var(--radius-sm);
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .slippage-btn.active {
            background: var(--brand-light);
            border-color: var(--brand);
            color: var(--brand);
        }
        
        /* Network Selector */
        .network-badge {
            display: flex;
            align-items: center;
            gap: var(--s1);
            padding: var(--s1) var(--s2);
            background: var(--bg-elev);
            border: 1px solid var(--border);
            border-radius: var(--radius-md);
            cursor: pointer;
        }
        
        .network-indicator {
            width: 8px;
            height: 8px;
            background: var(--success);
            border-radius: 50%;
        }
        
        /* Mobile Responsive */
        @media (max-width: 768px) {
            .container {
                padding: 0 var(--s2);
            }
            
            .nav-menu {
                display: none;
            }
            
            h1 { font-size: 2rem; }
            h2 { font-size: 1.5rem; }
            
            .swap-container {
                margin: var(--s3) auto;
            }
            
            .toast-container {
                left: var(--s2);
                right: var(--s2);
            }
            
            .modal {
                width: 95%;
            }
        }
        
        /* Utility Classes */
        .hidden { display: none !important; }
        .flex { display: flex; }
        .flex-col { flex-direction: column; }
        .items-center { align-items: center; }
        .justify-between { justify-content: space-between; }
        .gap-1 { gap: var(--s1); }
        .gap-2 { gap: var(--s2); }
        .gap-3 { gap: var(--s3); }
        .mt-2 { margin-top: var(--s2); }
        .mt-3 { margin-top: var(--s3); }
        .mb-2 { margin-bottom: var(--s2); }
        .mb-3 { margin-bottom: var(--s3); }
        .w-full { width: 100%; }
        .relative { position: relative; }
        
        /* Screen Containers */
        .screen {
            display: none;
            min-height: calc(100vh - 80px);
        }
        
        .screen.active {
            display: block;
        }
        
        /* Landing Page */
        .hero {
            padding: var(--s8) 0;
            text-align: center;
        }
        
        .hero h1 {
            margin-bottom: var(--s3);
            background: linear-gradient(135deg, var(--brand), var(--info));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .hero-subtitle {
            font-size: 1.25rem;
            color: var(--text-secondary);
            margin-bottom: var(--s5);
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: var(--s3);
            margin: var(--s8) 0;
        }
        
        .feature-card {
            padding: var(--s4);
            text-align: center;
        }
        
        .feature-icon {
            width: 48px;
            height: 48px;
            margin: 0 auto var(--s2);
            background: var(--brand-light);
            border-radius: var(--radius-md);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }
        
        .feature-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: var(--s1);
        }
        
        .feature-description {
            color: var(--text-secondary);
        }
        
        /* Stats */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: var(--s3);
            margin: var(--s5) 0;
        }
        
        .stat-card {
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--brand);
            font-family: var(--font-mono);
        }
        
        .stat-label {
            color: var(--text-secondary);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="nav">
        <div class="container nav-container">
            <a href="#" class="nav-brand">SwiftDEX</a>
            <div class="nav-menu">
                <a href="#" class="nav-link active" data-screen="swap">Swap</a>
                <a href="#" class="nav-link" data-screen="liquidity">Liquidity</a>
                <a href="#" class="nav-link" data-screen="pools">Pools</a>
            </div>
            <div class="nav-actions">
                <div class="network-badge" onclick="openNetworkModal()">
                    <span class="network-indicator"></span>
                    <span>Ethereum</span>
                    <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                        <path d="M3 5L6 8L9 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                </div>
                <button class="btn btn-ghost btn-sm" onclick="openSettings()">
                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                        <circle cx="10" cy="10" r="3"/>
                        <path d="M10 1v6m0 6v6m9-9h-6m-6 0H1"/>
                    </svg>
                </button>
                <button class="btn btn-ghost btn-sm" onclick="toggleTheme()">
                    <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M10 2a8 8 0 108 8c0-.9-.15-1.77-.42-2.58a6 6 0 01-8.16-8.16A7.97 7.97 0 0010 2z"/>
                    </svg>
                </button>
                <button id="connectBtn" class="btn btn-primary btn-sm" onclick="openWalletModal()">
                    Connect Wallet
                </button>
            </div>
        </div>
    </nav>

    <!-- Landing Screen -->
    <div id="landing-screen" class="screen">
        <div class="container">
            <div class="hero">
                <h1>Trade Without Limits</h1>
                <p class="hero-subtitle">
                    The most trusted decentralized exchange with best-in-class liquidity
                </p>
                <button class="btn btn-primary btn-lg" onclick="openWalletModal()">
                    Connect Wallet to Start
                </button>
            </div>
            
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-value">$2.4B</div>
                    <div class="stat-label">Total Value Locked</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">147K</div>
                    <div class="stat-label">Active Users</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">0.01%</div>
                    <div class="stat-label">Lowest Fees</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">2,847</div>
                    <div class="stat-label">Token Pairs</div>
                </div>
            </div>
            
            <div class="feature-grid">
                <div class="feature-card card">
                    <div class="feature-icon">🚀</div>
                    <div class="feature-title">Instant Swaps</div>
                    <div class="feature-description">
                        Lightning-fast trades with minimal slippage and best price execution
                    </div>
                </div>
                <div class="feature-card card">
                    <div class="feature-icon">💎</div>
                    <div class="feature-title">Deep Liquidity</div>
                    <div class="feature-description">
                        Access to multi-billion dollar liquidity pools for stable pricing
                    </div>
                </div>
                <div class="feature-card card">
                    <div class="feature-icon">🛡️</div>
                    <div class="feature-title">Secure & Audited</div>
                    <div class="feature-description">
                        Battle-tested smart contracts audited by leading security firms
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Swap Screen -->
    <div id="swap-screen" class="screen active">
        <div class="swap-container">
            <div class="swap-header">
                <h3>Swap</h3>
                <button class="btn btn-ghost btn-sm" onclick="openSettings()">
                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                        <circle cx="10" cy="10" r="3"/>
                        <path d="M10 1v6m0 6v6m9-9h-6m-6 0H1"/>
                    </svg>
                </button>
            </div>
            
            <div class="card card-elevated">
                <div class="swap-input-group">
                    <div class="swap-input-header">
                        <span class="text-sm text-muted">You pay</span>
                        <span class="text-sm text-muted">Balance: 1,234.56</span>
                    </div>
                    <div class="swap-input-container">
                        <input type="text" class="swap-input-field" placeholder="0.0" value="100">
                        <button class="btn btn-ghost btn-sm">MAX</button>
                        <div class="token-select" onclick="openTokenModal('from')">
                            <div class="token-icon"></div>
                            <span>AAA</span>
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                                <path d="M3 5L6 8L9 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <div class="swap-arrow">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M7 10L12 15L17 10"/>
                    </svg>
                </div>
                
                <div class="swap-input-group">
                    <div class="swap-input-header">
                        <span class="text-sm text-muted">You receive</span>
                        <span class="text-sm text-muted">Balance: 567.89</span>
                    </div>
                    <div class="swap-input-container">
                        <input type="text" class="swap-input-field" placeholder="0.0" value="2,847.32">
                        <div class="token-select" onclick="openTokenModal('to')">
                            <div class="token-icon" style="background: linear-gradient(135deg, #F59E0B, #EF4444)"></div>
                            <span>BBB</span>
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                                <path d="M3 5L6 8L9 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <div class="price-info mt-3">
                    <div class="price-info-row">
                        <span class="price-info-label">Rate</span>
                        <span class="price-info-value">
                            1 AAA = 28.47 BBB
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="cursor: pointer;">
                                <path d="M8 3v5l3 3m5-3a8 8 0 11-16 0 8 8 0 0116 0z" stroke="currentColor" fill="none"/>
                            </svg>
                        </span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Price Impact</span>
                        <span class="price-info-value">
                            <span class="badge badge-success">0.05%</span>
                        </span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Network Fee</span>
                        <span class="price-info-value">~$3.24</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Min. Received</span>
                        <span class="price-info-value text-mono">2,818.85 BBB</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Route</span>
                        <span class="price-info-value text-sm">AAA → USDC → BBB</span>
                    </div>
                </div>
                
                <button class="btn btn-primary btn-full btn-lg" onclick="executeSwap()">
                    Review Swap
                </button>
            </div>
        </div>
    </div>

    <!-- Liquidity Screen -->
    <div id="liquidity-screen" class="screen">
        <div class="swap-container">
            <div class="swap-header">
                <h3>Liquidity</h3>
            </div>
            
            <div class="pool-tabs">
                <button class="pool-tab active" onclick="switchPoolTab(this, 'add')">Add Liquidity</button>
                <button class="pool-tab" onclick="switchPoolTab(this, 'remove')">Remove Liquidity</button>
            </div>
            
            <div id="add-liquidity" class="card card-elevated">
                <div class="mb-3">
                    <label class="input-label">Select Pair</label>
                    <div class="flex gap-2">
                        <div class="token-select" style="flex: 1" onclick="openTokenModal('pool1')">
                            <div class="token-icon"></div>
                            <span>AAA</span>
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                                <path d="M3 5L6 8L9 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </div>
                        <div class="token-select" style="flex: 1" onclick="openTokenModal('pool2')">
                            <div class="token-icon" style="background: linear-gradient(135deg, #F59E0B, #EF4444)"></div>
                            <span>BBB</span>
                            <svg width="12" height="12" viewBox="0 0 12 12" fill="currentColor">
                                <path d="M3 5L6 8L9 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <div class="mb-3">
                    <label class="input-label">Fee Tier</label>
                    <div class="slippage-options">
                        <button class="slippage-btn">0.01%</button>
                        <button class="slippage-btn active">0.05%</button>
                        <button class="slippage-btn">0.30%</button>
                        <button class="slippage-btn">1.00%</button>
                    </div>
                    <span class="text-xs text-muted">Select based on pair volatility</span>
                </div>
                
                <div class="mb-3">
                    <div class="input-group">
                        <label class="input-label">AAA Amount</label>
                        <input type="text" class="input input-lg" placeholder="0.0" value="1000">
                    </div>
                </div>
                
                <div class="mb-3">
                    <div class="input-group">
                        <label class="input-label">BBB Amount</label>
                        <input type="text" class="input input-lg" placeholder="0.0" value="28,473.20">
                    </div>
                </div>
                
                <div class="price-info mb-3">
                    <div class="price-info-row">
                        <span class="price-info-label">Share of Pool</span>
                        <span class="price-info-value">0.05%</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">AAA per BBB</span>
                        <span class="price-info-value">0.0351</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">BBB per AAA</span>
                        <span class="price-info-value">28.47</span>
                    </div>
                </div>
                
                <button class="btn btn-primary btn-full btn-lg">
                    Add Liquidity
                </button>
            </div>
            
            <div id="remove-liquidity" class="card card-elevated hidden">
                <div class="mb-3">
                    <label class="input-label">Amount to Remove</label>
                    <div class="slippage-options">
                        <button class="slippage-btn">25%</button>
                        <button class="slippage-btn active">50%</button>
                        <button class="slippage-btn">75%</button>
                        <button class="slippage-btn">100%</button>
                    </div>
                </div>
                
                <div class="price-info mb-3">
                    <div class="price-info-row">
                        <span class="price-info-label">Pooled AAA</span>
                        <span class="price-info-value">1,000 AAA</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Pooled BBB</span>
                        <span class="price-info-value">28,473 BBB</span>
                    </div>
                    <div class="price-info-row">
                        <span class="price-info-label">Your pool share</span>
                        <span class="price-info-value">0.05%</span>
                    </div>
                </div>
                
                <button class="btn btn-primary btn-full btn-lg">
                    Remove Liquidity
                </button>
            </div>
        </div>
    </div>

    <!-- Pools Screen -->
    <div id="pools-screen" class="screen">
        <div class="container">
            <div class="mb-3 flex justify-between items-center">
                <h2>Liquidity Pools</h2>
                <input type="text" class="input" placeholder="Search pools..." style="max-width: 300px;">
            </div>
            
            <div class="card">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Pool</th>
                            <th>TVL</th>
                            <th>Volume 24h</th>
                            <th>Fees 24h</th>
                            <th>APR</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="flex items-center gap-2">
                                    <div class="flex">
                                        <div class="token-icon" style="width: 32px; height: 32px;"></div>
                                        <div class="token-icon" style="width: 32px; height: 32px; margin-left: -12px; background: linear-gradient(135deg, #F59E0B, #EF4444)"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium">AAA/BBB</div>
                                        <div class="text-xs text-muted">0.05% fee</div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-mono">$24.7M</td>
                            <td class="text-mono">$3.2M</td>
                            <td class="text-mono">$1,600</td>
                            <td><span class="badge badge-success">12.4%</span></td>
                            <td>
                                <button class="btn btn-sm btn-primary">Add</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="flex items-center gap-2">
                                    <div class="flex">
                                        <div class="token-icon" style="width: 32px; height: 32px; background: linear-gradient(135deg, #10B981, #3B82F6)"></div>
                                        <div class="token-icon" style="width: 32px; height: 32px; margin-left: -12px; background: linear-gradient(135deg, #8B5CF6, #EC4899)"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium">USDC/ETH</div>
                                        <div class="text-xs text-muted">0.30% fee</div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-mono">$142.3M</td>
                            <td class="text-mono">$18.7M</td>
                            <td class="text-mono">$56,100</td>
                            <td><span class="badge badge-success">8.7%</span></td>
                            <td>
                                <button class="btn btn-sm btn-primary">Add</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="flex items-center gap-2">
                                    <div class="flex">
                                        <div class="token-icon" style="width: 32px; height: 32px; background: linear-gradient(135deg, #F59E0B, #EF4444)"></div>
                                        <div class="token-icon" style="width: 32px; height: 32px; margin-left: -12px; background: linear-gradient(135deg, #10B981, #3B82F6)"></div>
                                    </div>
                                    <div>
                                        <div class="font-medium">BBB/USDC</div>
                                        <div class="text-xs text-muted">0.05% fee</div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-mono">$8.4M</td>
                            <td class="text-mono">$967K</td>
                            <td class="text-mono">$483</td>
                            <td><span class="badge badge-warning">5.2%</span></td>
                            <td>
                                <button class="btn btn-sm btn-primary">Add</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Token Selector Modal -->
    <div id="tokenModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <h4>Select Token</h4>
                <button class="btn btn-ghost btn-sm" onclick="closeModal('tokenModal')">✕</button>
            </div>
            <div class="modal-body">
                <input type="text" class="input w-full mb-3" placeholder="Search name or paste address">
                
                <div class="mb-3">
                    <div class="text-sm text-muted mb-2">Popular tokens</div>
                    <div class="flex gap-2">
                        <button class="btn btn-secondary btn-sm">ETH</button>
                        <button class="btn btn-secondary btn-sm">USDC</button>
                        <button class="btn btn-secondary btn-sm">AAA</button>
                        <button class="btn btn-secondary btn-sm">BBB</button>
                    </div>
                </div>
                
                <div class="token-list">
                    <div class="token-item" onclick="selectToken('AAA')">
                        <div class="flex items-center justify-between" style="padding: var(--s2); cursor: pointer; border-radius: var(--radius-md);">
                            <div class="flex items-center gap-2">
                                <div class="token-icon"></div>
                                <div>
                                    <div>AAA</div>
                                    <div class="text-xs text-muted">AAA Token</div>
                                </div>
                            </div>
                            <div class="text-mono">1,234.56</div>
                        </div>
                    </div>
                    <div class="token-item" onclick="selectToken('BBB')">
                        <div class="flex items-center justify-between" style="padding: var(--s2); cursor: pointer; border-radius: var(--radius-md);">
                            <div class="flex items-center gap-2">
                                <div class="token-icon" style="background: linear-gradient(135deg, #F59E0B, #EF4444)"></div>
                                <div>
                                    <div>BBB</div>
                                    <div class="text-xs text-muted">BBB Token</div>
                                </div>
                            </div>
                            <div class="text-mono">567.89</div>
                        </div>
                    </div>
                    <div class="token-item" onclick="selectToken('USDC')">
                        <div class="flex items-center justify-between" style="padding: var(--s2); cursor: pointer; border-radius: var(--radius-md);">
                            <div class="flex items-center gap-2">
                                <div class="token-icon" style="background: linear-gradient(135deg, #10B981, #3B82F6)"></div>
                                <div>
                                    <div class="flex items-center gap-1">
                                        USDC
                                        <span class="badge badge-warning">⚠️</span>
                                    </div>
                                    <div class="text-xs text-muted">USD Coin</div>
                                </div>
                            </div>
                            <div class="text-mono">10,000.00</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Wallet Connect Modal -->
    <div id="walletModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <h4>Connect Wallet</h4>
                <button class="btn btn-ghost btn-sm" onclick="closeModal('walletModal')">✕</button>
            </div>
            <div class="modal-body">
                <div class="flex flex-col gap-2">
                    <button class="btn btn-secondary btn-full" onclick="connectWallet('metamask')">
                        <span>🦊</span> MetaMask
                    </button>
                    <button class="btn btn-secondary btn-full" onclick="connectWallet('walletconnect')">
                        <span>🔗</span> WalletConnect
                    </button>
                    <button class="btn btn-secondary btn-full" onclick="connectWallet('coinbase')">
                        <span>🔵</span> Coinbase Wallet
                    </button>
                    <button class="btn btn-secondary btn-full" onclick="connectWallet('rainbow')">
                        <span>🌈</span> Rainbow
                    </button>
                </div>
                
                <div class="mt-3 text-center text-sm text-muted">
                    By connecting, you agree to our Terms of Service
                </div>
            </div>
        </div>
    </div>

    <!-- Settings Modal -->
    <div id="settingsModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <h4>Settings</h4>
                <button class="btn btn-ghost btn-sm" onclick="closeModal('settingsModal')">✕</button>
            </div>
            <div class="modal-body">
                <div class="settings-panel">
                    <div class="settings-group">
                        <div class="settings-label">
                            Slippage Tolerance
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="opacity: 0.5">
                                <path d="M8 0a8 8 0 100 16A8 8 0 008 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"/>
                            </svg>
                        </div>
                        <div class="slippage-options">
                            <button class="slippage-btn active">Auto</button>
                            <button class="slippage-btn">0.1%</button>
                            <button class="slippage-btn">0.5%</button>
                            <button class="slippage-btn">1.0%</button>
                        </div>
                        <input type="text" class="input" placeholder="Custom %" />
                    </div>
                    
                    <div class="settings-group">
                        <div class="settings-label">
                            Transaction Deadline
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor" style="opacity: 0.5">
                                <path d="M8 0a8 8 0 100 16A8 8 0 008 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"/>
                            </svg>
                        </div>
                        <div class="flex items-center gap-2">
                            <input type="text" class="input" value="30" style="width: 100px;">
                            <span class="text-muted">minutes</span>
                        </div>
                    </div>
                    
                    <div class="settings-group">
                        <div class="settings-label">Interface</div>
                        <div class="flex flex-col gap-2">
                            <label class="flex items-center gap-2">
                                <input type="checkbox" checked>
                                <span>Expert mode</span>
                            </label>
                            <label class="flex items-center gap-2">
                                <input type="checkbox">
                                <span>Disable multihops</span>
                            </label>
                            <label class="flex items-center gap-2">
                                <input type="checkbox" checked>
                                <span>Sound effects</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Network Selector Modal -->
    <div id="networkModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <h4>Select Network</h4>
                <button class="btn btn-ghost btn-sm" onclick="closeModal('networkModal')">✕</button>
            </div>
            <div class="modal-body">
                <div class="flex flex-col gap-2">
                    <button class="btn btn-secondary btn-full justify-between" onclick="selectNetwork('Ethereum')">
                        <span>Ethereum</span>
                        <span class="network-indicator"></span>
                    </button>
                    <button class="btn btn-secondary btn-full justify-between" onclick="selectNetwork('Polygon')">
                        <span>Polygon</span>
                    </button>
                    <button class="btn btn-secondary btn-full justify-between" onclick="selectNetwork('Arbitrum')">
                        <span>Arbitrum</span>
                    </button>
                    <button class="btn btn-secondary btn-full justify-between" onclick="selectNetwork('Optimism')">
                        <span>Optimism</span>
                    </button>
                    <button class="btn btn-secondary btn-full justify-between" onclick="selectNetwork('BSC')">
                        <span>BSC</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container" id="toastContainer"></div>

    <script>
        // Theme Toggle
        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        }
        
        // Check for saved theme preference
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.documentElement.setAttribute('data-theme', savedTheme);
        
        // Modal Functions
        function openModal(modalId) {
            document.getElementById(modalId).classList.add('active');
        }
        
        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('active');
        }
        
        function openTokenModal(side) {
            window.tokenSide = side;
            openModal('tokenModal');
        }
        
        function openWalletModal() {
            openModal('walletModal');
        }
        
        function openSettings() {
            openModal('settingsModal');
        }
        
        function openNetworkModal() {
            openModal('networkModal');
        }
        
        // Select Token
        function selectToken(token) {
            closeModal('tokenModal');
            showToast(`Selected ${token}`, 'success');
        }
        
        // Connect Wallet
        function connectWallet(provider) {
            closeModal('walletModal');
            document.getElementById('connectBtn').innerHTML = '0x1234...5678';
            document.getElementById('connectBtn').classList.remove('btn-primary');
            document.getElementById('connectBtn').classList.add('btn-secondary');
            showToast(`Connected with ${provider}`, 'success');
            
            // Switch to swap screen after connecting
            switchScreen('swap');
        }
        
        // Select Network
        function selectNetwork(network) {
            closeModal('networkModal');
            document.querySelector('.network-badge span:nth-child(2)').textContent = network;
            showToast(`Switched to ${network}`, 'success');
        }
        
        // Execute Swap
        function executeSwap() {
            showToast('Transaction submitted', 'info');
            setTimeout(() => {
                showToast('Swap successful! 100 AAA → 2,847.32 BBB', 'success');
            }, 2000);
        }
        
        // Switch Pool Tab
        function switchPoolTab(tab, type) {
            document.querySelectorAll('.pool-tab').forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            
            if (type === 'add') {
                document.getElementById('add-liquidity').classList.remove('hidden');
                document.getElementById('remove-liquidity').classList.add('hidden');
            } else {
                document.getElementById('add-liquidity').classList.add('hidden');
                document.getElementById('remove-liquidity').classList.remove('hidden');
            }
        }
        
        // Toast Notification
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = 'toast';
            
            const icon = {
                success: '✓',
                error: '✕',
                warning: '⚠️',
                info: 'ℹ️'
            }[type];
            
            toast.innerHTML = `
                <span style="font-size: 1.25rem">${icon}</span>
                <span>${message}</span>
            `;
            
            document.getElementById('toastContainer').appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
        
        // Screen Navigation
        function switchScreen(screenName) {
            // Hide all screens
            document.querySelectorAll('.screen').forEach(screen => {
                screen.classList.remove('active');
            });
            
            // Show selected screen
            document.getElementById(`${screenName}-screen`).classList.add('active');
            
            // Update nav links
            document.querySelectorAll('.nav-link').forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('data-screen') === screenName) {
                    link.classList.add('active');
                }
            });
        }
        
        // Nav link click handlers
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const screen = link.getAttribute('data-screen');
                switchScreen(screen);
            });
        });
        
        // Close modals on overlay click
        document.querySelectorAll('.modal-overlay').forEach(overlay => {
            overlay.addEventListener('click', (e) => {
                if (e.target === overlay) {
                    overlay.classList.remove('active');
                }
            });
        });
        
        // Keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                document.querySelectorAll('.modal-overlay.active').forEach(modal => {
                    modal.classList.remove('active');
                });
            }
        });
        
        // Slippage button handlers
        document.querySelectorAll('.slippage-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                this.parentElement.querySelectorAll('.slippage-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
            });
        });
        
        // Add smooth hover effects to token items
        document.querySelectorAll('.token-item').forEach(item => {
            item.addEventListener('mouseenter', function() {
                this.querySelector('div').style.background = 'var(--bg-elev)';
            });
            item.addEventListener('mouseleave', function() {
                this.querySelector('div').style.background = 'transparent';
            });
        });
        
        // Simulate loading states
        function showLoadingState() {
            const skeleton = document.createElement('div');
            skeleton.className = 'skeleton';
            skeleton.style.height = '60px';
            skeleton.style.marginBottom = 'var(--s2)';
            return skeleton;
        }
        
        // Price refresh animation
        setInterval(() => {
            const priceElements = document.querySelectorAll('.price-info-value .text-mono');
            priceElements.forEach(el => {
                el.style.opacity = '0.5';
                setTimeout(() => {
                    el.style.opacity = '1';
                }, 100);
            });
        }, 10000);
        
        // Initialize
        console.log('SwiftDEX V1 initialized');
    </script>
</body>
</html>
